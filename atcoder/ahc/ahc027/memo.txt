
方針
基本的にはルートを長くするとそれだけ重くなるので短いループで考えるはず
大きなループを作って、部分木の順番を最適化 (dp可能?, 部分木の順番入れ替え)
bfs木も一応あるかも 嬉しいのは重い所をパスにすると掃除回数を増やせる。悪いのはTがデカくなる
一筆書きっぽく最適化

考えるメモ
焼き鈍し
汚れやすいエリアは余分に回ってもトクなケースがある気がする
経路のある部分を変えた時の前後の差分計算高速化

TODO
かなり愚直よりの焼き鈍しを低音超長時間でどんな感じになるか、方針の上限として見る

時間余ったら再検討
grid 5*5 あまり上手くないらしい
重い頂点と軽い頂点もgridを分けるのを少し試したが微妙
d > 500 はスキップ これは期待されるスコアに依存して変わるはず


12/1 
22:00 sample提出 1579298812	25.8 
感覚的にこの設定で2桁小さくは難しそうなので圧縮されまくることはない？

12/2
23:00 22.8 になった
N <= 30 は 32/50 で 14.5/22.8 でほぼ一致 sampleはどこかが弱いとかはなく上位陣は大体 半分になってると考えて良さそう
wataさんの standingsをローカル準備
大体4*4 or 5*5 くらいのブロックにすると各ブロックのsum(d)とブロック数でそれなりの概算が高速に出来るのでこのルートを最適化で試す

avg_d が小さいブロックは結果への影響が微小になりそうなので1回通れば十分
大きいブロックは途中で複数通ると嬉しいことがあるはず

12/3
17:13 grid 4*4 くらいで区切り 訪問順は乱択500回 1372822963 26.8

17:50 grid 4*4 訪問順は [現在のブロックからの距離,入り口からの距離,壁からの距離] で小さいものを貪欲 1274259675 27.2
これでやるとパスはある程度短めになった

grid 5*5 あまり上手くないらしい
重い頂点と軽い頂点もgridを分けるのを少し試したが微妙

18:38 grid 4*4 2回目以降にgridを回る時は d > 500 の頂点だけ再訪問する 軽い頂点は結果への影響が小さいため 1164612672 30


12/4 28.4 くらいに下降
周期Tを決め打ってその中のパスを改善していくのは良いのでは。スコアを差分計算でそのまま持てる。 周期は 5*N**2 ~ 10*N**2 くらいはあっても良さそうだが N=40だと改善がしきれないかも
gridのパスを改善すればサイズが 0.1倍程度になるので悪くないかも

12/5 28.3 
ランダムウォークで初期解作成 乱択低温焼き鈍しは書いてみたが
1マス版はかなり盤面が小さくないといまいちで、grid版も同様
近傍が弱いのと初期解は強くしないと
grid版だとざっくりの各ターンのスコアは出せるので、大きいターンを減らす改善を貪欲に試すとか

スコアへの寄与は現状の貪欲だと大体 d に比例するので、dに比例して訪問回数が多いと全体が均一になると言える。これは現実でも同じなので正しいはず
dは100倍くらい変わったりするがそこまでの余裕はないので sqrt とか？

12/8 28.15
訪問回数は √d がざっくり最適 重い頂点が存在するgridをクラスターとして 4個程度まで決め、それを周回する中で他のgridを均一に周る
クラスターの数 周回数を全部試す

1周が良さそうなら、ほぼ巡回セールスマン問題で出来るだけ短く全て見て帰るルートを焼き鈍し ただスコアは既にある程度良いはずなので優先度低

2周以上は
クラスターの数 C を指定
重いgridからクラスターを決定 ※ クラスター間の距離とかも考慮はしたい
クラスター間の周回ルートを決定。 全列挙で C-1! で良い
各周でどこのgridを巡るかを 1周で1つのgridを回る状態から減らしていく
とりあえず1番コストの軽いgridグループを隣接のgridグループとマージして gridグループを減らしていく
スコアを概算 or 実際に求める

一番良かったやつで gridの振り分けなどを 乱択山登り or 焼き鈍し
